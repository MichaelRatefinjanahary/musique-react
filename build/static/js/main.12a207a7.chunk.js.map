{"version":3,"sources":["components/utils/SearchAutocomplete.js","components/header/Header.js","components/home/ArtistListFilter.js","components/home/ArtistList.js","components/detail/ArtistInfo.js","components/detail/ArtistDescription.js","components/detail/ArtistAlbum.js","components/detail/DetailArtist.js","serviceWorker.js","index.js","App.js"],"names":["sleep","delay","Promise","resolve","setTimeout","SearchAutocomplete","React","useState","open","setOpen","options","setOptions","loading","setLoading","history","useHistory","handleChange","e","value","a","url","URL","fetch","response","json","artists","map","artist","name","Autocomplete","id","style","width","onInputChange","onChange","push","onClose","getOptionSelected","option","getOptionLabel","renderInput","params","TextField","variant","placeholder","InputProps","paddingLeft","color","endAdornment","Fragment","CircularProgress","size","useStyles","makeStyles","theme","grow","flexGrow","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginRight","spacing","marginLeft","searchIcon","height","pointerEvents","alignItems","justifyContent","Header","classes","className","AppBar","Toolbar","Typography","noWrap","to","TabPanel","props","children","index","component","role","hidden","aria-labelledby","Box","p","ArtistListFilter","filterArtistListHandler","useTheme","alphabet","item","key","onClick","Tabs","indicatorColor","textColor","aria-label","Tab","label","dir","direction","currentPage","ArtistList","setArtists","classHidden","setClassHidden","currentAlphabet","setCurrentAlphabet","fetchData","page","responseJson","filterArtistList","listArtist","navigate","next","IconButton","Grid","container","md","Button","artistName","ArtistInfo","handleClose","formerMembers","members","filter","member","ended","alt","src","picture","medium","List","ListItem","ListItemAvatar","Avatar","ListItemText","primary","secondary","lifeSpan","begin","Divider","locationInfo","join","genres","labels","deezerFans","startIcon","Dialog","fullWidth","maxWidth","DialogTitle","DialogContent","xs","Table","TableHead","TableRow","TableCell","TableBody","scope","instruments","end","DialogActions","ArtistDescription","dbp_abstract","root","media","paddingTop","avatar","red","content","overflowY","ArtistAlbum","album","Card","CardHeader","toUpperCase","subheader","publicationDate","CardMedia","image","cover","CardContent","songs","song","button","DetailArtist","match","setArtist","useEffect","then","albums","Boolean","window","location","hostname","ReactDOM","render","exact","path","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.12a207a7.chunk.js","sourcesContent":["import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction sleep(delay = 0) {\r\n  return new Promise(resolve => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n}\r\n\r\nexport default function SearchAutocomplete() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [options, setOptions] = React.useState([]);\r\n  const [loading, setLoading] = React.useState(false);\r\n  const history = useHistory();\r\n\r\n  const handleChange = async (e, value) => {\r\n    setLoading(true);\r\n\r\n    if (value !== '') {\r\n      let url = new URL('https://wasabi.i3s.unice.fr/search/fulltext/' + value);\r\n      const response = await fetch(url);\r\n      await sleep(1e3);\r\n      const artists = await response.json();\r\n      setOptions(artists.map(artist => {return {name: artist.name}}));\r\n      \r\n      setLoading(false);\r\n      setOpen(true);\r\n      return;\r\n    }\r\n    setLoading(false);\r\n    setOpen(false);\r\n    setOptions([]);\r\n  }\r\n\r\n  return (\r\n    <Autocomplete\r\n      id=\"asynchronous-demo\"\r\n      style={{ width: 450 }}\r\n      open={open}\r\n      onInputChange={handleChange}\r\n      onChange={(e, value) => {\r\n        if (value !== null) {\r\n          history.push('/artist/' + value.name);\r\n        }\r\n      }}\r\n      onClose={() => {\r\n        setOpen(false);\r\n      }}\r\n      getOptionSelected={(option, value) => option.name === value.name}\r\n      getOptionLabel={option => option.name}\r\n      options={options}\r\n      loading={loading}\r\n      renderInput={params => (\r\n        <TextField\r\n          {...params}\r\n          variant=\"outlined\"\r\n          placeholder=\"Rechercher un artiste ...\"\r\n          InputProps={{\r\n            ...params.InputProps,\r\n            style: {\r\n              paddingLeft: 50,\r\n              color: 'white'\r\n            },\r\n            endAdornment: (\r\n              <React.Fragment>\r\n                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                {params.InputProps.endAdornment}\r\n              </React.Fragment>\r\n            ),\r\n          }}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}","import React from 'react';\r\nimport './Header.css';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchAutocomplete from '../utils/SearchAutocomplete';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        width: theme.spacing(7),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    }\r\n}));\r\n\r\nexport default function Header() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.grow}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                        <Link to=\"/\" className=\"Header-link\">Mini projet</Link>\r\n                    </Typography>\r\n                    <div className={classes.search}>\r\n                        <div className={classes.searchIcon}>\r\n                            <SearchIcon />\r\n                        </div>\r\n                        <SearchAutocomplete />\r\n                    </div>\r\n                    <div className={classes.grow} />\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport './ArtistListFilter.css';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index } = props;\r\n\r\n    return (\r\n        <Typography\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n        >\r\n            {value === index && <Box p={3}>{children}</Box>}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nexport default function ArtistListFilter({filterArtistListHandler}) {\r\n    const theme = useTheme();\r\n    let alphabet = [...'ABCDEFGHIJKLMNOPQRSTUVWXYZ'];\r\n    alphabet = alphabet.map((item, index) => {\r\n        return <li key={index} onClick={() => filterArtistListHandler(item)}><span>{item}</span></li>\r\n    })\r\n\r\n    return (\r\n        <div className=\"ArtistListFilter\">\r\n            <AppBar position=\"static\" color=\"default\">\r\n                <Tabs\r\n                    value={0}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    variant=\"fullWidth\"\r\n                    aria-label=\"full width tabs example\"\r\n                >\r\n                    <Tab label=\"Artists\" />\r\n                </Tabs>\r\n            </AppBar>\r\n            <TabPanel value={0} index={0} dir={theme.direction}>\r\n                <ul className=\"ArtistListFilter-alphabet\">\r\n                    {alphabet}\r\n                </ul>\r\n            </TabPanel>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { useState } from 'react';\r\nimport './ArtistList.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport NavigateNext from '@material-ui/icons/NavigateNext'\r\nimport NavigateBefore from '@material-ui/icons/NavigateBefore'\r\nimport ArtistListFilter from './ArtistListFilter';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nlet currentPage = 0;\r\nfunction sleep(delay = 0) {\r\n    return new Promise(resolve => {\r\n        setTimeout(resolve, delay);\r\n    });\r\n}\r\n\r\nexport default function ArtistList() {\r\n    const [artists, setArtists] = useState([]);\r\n    const [classHidden, setClassHidden] = useState('ArtistList-hidden');\r\n    const [currentAlphabet, setCurrentAlphabet] = useState('');\r\n    const history = useHistory();\r\n\r\n    const fetchData = async (alphabet, page) => {\r\n        let url = new URL('https://wasabi.i3s.unice.fr/search/categorie/Artists/lettre/' + alphabet + '/page/' + page);\r\n        const response = await fetch(url);\r\n        const responseJson = await response.json();\r\n\r\n        return responseJson;\r\n    }\r\n\r\n    const filterArtistList = async (alphabet) => {\r\n        currentPage = 0;\r\n        const listArtist = await fetchData(alphabet, currentPage);\r\n        setArtists(listArtist.artists);\r\n        setClassHidden('');\r\n        setCurrentAlphabet(alphabet);\r\n    }\r\n\r\n    const toDetailArtist = (artistName) => {\r\n        history.push('/artist/' + artistName);\r\n    }\r\n\r\n    const navigate = async (next) => {\r\n        if (next) {\r\n            currentPage += 1;\r\n        }\r\n        else {\r\n            if (currentPage !== 0) {\r\n                currentPage -= 1;\r\n            }\r\n        }\r\n        await sleep(1e1);\r\n        const listArtist = await fetchData(currentAlphabet, currentPage);\r\n        setArtists(listArtist.artists);\r\n        setClassHidden('');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ArtistListFilter filterArtistListHandler={filterArtistList} />\r\n\r\n            <div className={'ArtistList ' + classHidden}>\r\n                <nav className=\"ArtistList-pagination-nav\">\r\n                    <IconButton className=\"ArtistList-iconButton\" color=\"primary\" aria-label=\"before\" onClick={() => navigate(false)}>\r\n                        <NavigateBefore />\r\n                    </IconButton>\r\n                    <IconButton className=\"ArtistList-iconButton\" color=\"primary\" aria-label=\"next\" onClick={() => navigate(true)}>\r\n                        <NavigateNext />\r\n                    </IconButton>\r\n                </nav>\r\n                <Grid className=\"ArtistList-button-container\" container spacing={3}>\r\n                    {artists.map((artist, index) => {\r\n                        return (\r\n                            <Grid item md='auto' key={index}>\r\n                                <Button className=\"ArtistList-button\" variant=\"contained\" onClick={() => toDetailArtist(artist.name)}>{artist.name}</Button>\r\n                            </Grid>\r\n                        )\r\n                    })}\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport './ArtistInfo.css';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CakeIcon from '@material-ui/icons/Cake';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport MusicNoteIcon from '@material-ui/icons/MusicNote';\r\nimport LabelIcon from '@material-ui/icons/Label';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nexport default function ArtistInfo({ artist }) {\r\n    const [open, setOpen] = useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const formerMembers = artist?.members?.filter(member => {\r\n        return member.ended === true\r\n    });\r\n\r\n    const members = artist?.members?.filter(member => {\r\n        return member.ended === false\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"ArtistInfo\">\r\n                <img alt=\"Artist\" src={artist?.picture?.medium} />\r\n                <span>{artist?.name}</span>\r\n            </div>\r\n            <div>\r\n                <List>\r\n                    <ListItem>\r\n                        <ListItemAvatar>\r\n                            <Avatar>\r\n                                <CakeIcon />\r\n                            </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText primary=\"Date de naissance\" secondary={artist?.lifeSpan?.begin} />\r\n                    </ListItem>\r\n                    <Divider variant=\"inset\" component=\"li\" />\r\n                    <ListItem>\r\n                        <ListItemAvatar>\r\n                            <Avatar>\r\n                                <LocationOnIcon />\r\n                            </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText primary=\"Localisation\" secondary={artist?.locationInfo?.join(', ')} />\r\n                    </ListItem>\r\n                    <Divider variant=\"inset\" component=\"li\" />\r\n                    <ListItem>\r\n                        <ListItemAvatar>\r\n                            <Avatar>\r\n                                <MusicNoteIcon />\r\n                            </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText primary=\"Genre\" secondary={artist?.genres?.join(', ')} />\r\n                    </ListItem>\r\n                    <Divider variant=\"inset\" component=\"li\" />\r\n                    <ListItem>\r\n                        <ListItemAvatar>\r\n                            <Avatar>\r\n                                <LabelIcon />\r\n                            </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText primary=\"Label\" secondary={artist?.labels?.join(', ')} />\r\n                    </ListItem>\r\n                    <Divider variant=\"inset\" component=\"li\" />\r\n                    <ListItem>\r\n                        <ListItemAvatar>\r\n                            <Avatar>\r\n                                <FavoriteIcon />\r\n                            </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText primary=\"Deezer fans\" secondary={artist?.deezerFans} />\r\n                    </ListItem>\r\n                    <Divider variant=\"inset\" component=\"li\" />\r\n                </List>\r\n                <div className=\"ArtistInfo-members-button\">\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"default\"\r\n                        startIcon={<GroupIcon />}\r\n                        onClick={handleClickOpen}\r\n                    >\r\n                        Voir les membres\r\n                    </Button>\r\n                    <Dialog\r\n                        fullWidth={true}\r\n                        maxWidth='lg'\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                        aria-labelledby=\"max-width-dialog-title\"\r\n                    >\r\n                        <DialogTitle id=\"max-width-dialog-title\">{artist.name} membres</DialogTitle>\r\n                        <DialogContent>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item md={6} xs={12}>\r\n                                    <h4>Membres</h4>\r\n                                    <Table aria-label=\"simple table\">\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell>Nom</TableCell>\r\n                                                <TableCell>Instruments</TableCell>\r\n                                                <TableCell>Debut</TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {members?.map((member, index) => (\r\n                                                <TableRow key={index}>\r\n                                                    <TableCell component=\"th\" scope=\"row\">\r\n                                                        {member.name}\r\n                                                    </TableCell>\r\n                                                    <TableCell>{member.instruments.join(', ')}</TableCell>\r\n                                                    <TableCell>{member.begin}</TableCell>\r\n                                                </TableRow>\r\n                                            ))}\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </Grid>\r\n                                <Grid item md={6} xs={12}>\r\n                                    <h4>Anciens membres</h4>\r\n                                    <Table aria-label=\"simple table\">\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell>Nom</TableCell>\r\n                                                <TableCell>Instruments</TableCell>\r\n                                                <TableCell>Debut</TableCell>\r\n                                                <TableCell>Fin</TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {formerMembers?.map((member, index) => (\r\n                                                <TableRow key={index}>\r\n                                                    <TableCell component=\"th\" scope=\"row\">\r\n                                                        {member.name}\r\n                                                    </TableCell>\r\n                                                    <TableCell>{member.instruments.join(', ')}</TableCell>\r\n                                                    <TableCell>{member.begin}</TableCell>\r\n                                                    <TableCell>{member.end}</TableCell>\r\n                                                </TableRow>\r\n                                            ))}\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={handleClose} color=\"primary\">\r\n                                Fermer\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport './ArtistDescription.css';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nexport default function ArtistDescription({artist}) {\r\n    return (\r\n        <div>\r\n            <span>\r\n                {artist?.dbp_abstract}\r\n            </span>\r\n            <Divider className=\"DetailArtist-divider\" variant=\"middle\" component=\"div\" />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport './ArtistAlbum.css';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { red } from '@material-ui/core/colors';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: 340,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  content: {\r\n    height: 200,\r\n    overflowY: 'auto'\r\n  }\r\n}));\r\n\r\nexport default function ArtistAlbum({artist, album}) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className=\"ArtistAlbum\">\r\n      <Card className={classes.root} variant=\"outlined\">\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n              {artist?.name[0]?.toUpperCase()}\r\n            </Avatar>\r\n          }\r\n          title={album?.title}\r\n          subheader={album?.publicationDate}\r\n        />\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={album?.cover?.medium}\r\n          title={album?.title}\r\n        />\r\n        <CardContent className={classes.content}>\r\n          <List component=\"nav\" aria-label=\"secondary mailbox folders\">\r\n            {\r\n              album?.songs?.map(song => {\r\n                return <ListItem button key={song.position}><ListItemText primary={(song.position + 1) + '. ' + song.title} /></ListItem>\r\n              })\r\n            }\r\n          </List>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport './DetailArtist.css';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport ArtistInfo from './ArtistInfo';\r\nimport ArtistDescription from './ArtistDescription';\r\nimport ArtistAlbum from './ArtistAlbum';\r\n\r\nexport default function DetailArtist(props) {\r\n\r\n  const artistName = props.match.params.artistName;\r\n  const [artist, setArtist] = useState({});\r\n\r\n  const fetchData = async (artistName) => {\r\n    let url = new URL('https://wasabi.i3s.unice.fr/search/artist/' + artistName);\r\n    const response = await fetch(url);\r\n    const responseJson = await response.json();\r\n\r\n    return responseJson;\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData(artistName).then(artist => {\r\n      setArtist(artist);\r\n    });\r\n  }, [artistName]);\r\n\r\n  return (\r\n    <div className=\"DetailArtist\">\r\n      <Grid className=\"DetailArtist-general-info\" container>\r\n        <Grid className=\"DetailArtist-info-container\" item md={5} xs={12}>\r\n          <ArtistInfo artist={artist} />\r\n        </Grid>\r\n        <Grid className=\"DetailArtist-description\" item md={7} xs={12}>\r\n          <ArtistDescription artist={artist} />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid className=\"DetailArtist-albums\" container spacing={3}>\r\n        {\r\n          artist?.albums?.map((album, index) => {\r\n            return <Grid item md=\"auto\" key={index} ><ArtistAlbum artist={artist} album={album} /></Grid>\r\n          })\r\n        }\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport './App.css';\nimport Header from './components/header/Header';\nimport ArtistList from './components/home/ArtistList';\nimport DetailArtist from './components/detail/DetailArtist';\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Header />\n\n        <Route exact path=\"/\" component={ArtistList}></Route>\n        <Route path=\"/artist/:artistName\" render={(props) => (\n          <DetailArtist key={props.match.params.artistName} {...props} />)\n        } />\n      </BrowserRouter>\n    </div>\n  );\n}\n"],"sourceRoot":""}